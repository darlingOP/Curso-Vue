{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-04870c9e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bg-dark\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"indecision-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Recuerda terminar con un signo de interrogación(?)\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.img ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.img,\n    alt: \"bg\"\n  }, null, 8 /* PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Hazme una pregunta\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.question = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.question]]), _hoisted_4, $data.isValidQuestion ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"h2\", null, _toDisplayString($data.question), 1 /* TEXT */), _createElementVNode(\"h1\", null, _toDisplayString($data.answer), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;gEAEIA,oBAEM;EAFDC,KAAK,EAAC;AAAS;;EAGfA,KAAK,EAAC;AAAsB;gEAE7BD,oBAAyD,WAAtD,oDAAkD;;;;;6DAN9CE,SAAG,kBAAdC,oBAAqC;;IAApBC,GAAG,EAAEF,SAAG;IAAEG,GAAG,EAAC;4EAC/BC,UAEM,EACNN,oBAOM,OAPNO,UAOM,mBANFP,oBAAuE;IAAhEQ,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,oBAAoB;+DAAUP,cAAQ;iDAARA,cAAQ,KACrEQ,UAAyD,EAC7CR,qBAAe,kBAA3BC,oBAGM,oBAFFH,oBAAuB,6BAAhBE,cAAQ,kBACfF,oBAAqB,6BAAdE,YAAM","names":["_createElementVNode","class","$data","_createElementBlock","src","alt","_hoisted_2","_hoisted_3","type","placeholder","_hoisted_4"],"sourceRoot":"","sources":["/home/des-sis18/proyectosHTML/VueJsCourse/BasesVue/vueApp/03-fundamentos/src/components/Indecision.vue"],"sourcesContent":["<template >\n    <img v-if=\"img\" :src=\"img\" alt=\"bg\"/>\n    <div class=\"bg-dark\">\n\n    </div>\n    <div class=\"indecision-container\">\n        <input type=\"text\" placeholder=\"Hazme una pregunta\" v-model=\"question\">\n        <p>Recuerda terminar con un signo de interrogación(?)</p>\n        <div  v-if=\"isValidQuestion\">\n            <h2>{{ question }}</h2>\n            <h1>{{ answer }}</h1>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    data(){\n        return{\n            question:'',\n            answer:'',\n            img:null,\n            isValidQuestion:false,\n        }\n    },\n\n    methods:{\n        async getAnswer(){\n\n            try {\n                this.answer = 'Pensanso...'\n\n                const {answer, image} = await fetch('https://yesno.wtf/api').then(resp =>resp.json())\n                //console.log(answer);\n\n                this.answer = answer === 'yes' ? 'Sí!' : 'No!'\n                this.img = image\n            } catch (error) {\n                this.answer = 'No se pudo cargar del API'\n                this.img=null\n            }\n            \n        }\n    },\n\n    //estar pendiente de una propiedad y sus cambios\n    watch:{\n        //el nombre debe ser igual al de la propiedad observada\n        question(value, oldValue){\n            this.isValidQuestion=false\n\n            console.log({value});\n            if( !value.includes('?')) return\n            \n            this.isValidQuestion = true\n            this.getAnswer()\n            //TODO: realizar peticion http\n        }\n    },\n\n\n}\n</script>\n<style scoped>\nimg, .bg-dark {\n        height: 100vh;\n        left: 0px;\n        max-height: 100%;\n        max-width: 100%;\n        position: fixed;\n        top: 0px;\n        width: 100vw;\n    }\n\n    .bg-dark {\n        background-color: rgba(0, 0, 0, 0.4);\n    }\n\n    .indecision-container {\n        position: relative;\n        z-index: 99;\n    }\n    \n    input {\n        width: 250px;\n        padding: 10px 15px;\n        border-radius: 5px;\n        border: none;\n    }\n    input:focus {\n        outline: none;\n    }\n\n    p {\n        color: white;\n        font-size: 20px;\n        margin-top: 0px;\n    }\n\n    h1, h2 {\n        color: white;\n    }\n    \n    h2 {\n        margin-top: 150px;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}