{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Counter - vuex\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Random\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"mapState\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"h2\", null, \"Direct access: \" + _toDisplayString(_ctx.$store.state.count), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"Computed: \" + _toDisplayString($options.countComputed), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.increment && $options.increment(...args))\n  }, \"+1\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.incrementBy && $options.incrementBy(...args))\n  }, \"+5\"), _hoisted_2, _hoisted_3, _createElementVNode(\"h2\", null, \"mapState:\" + _toDisplayString(_ctx.count), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"lastMutation:\" + _toDisplayString(_ctx.lastMutation), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","_ctx","$store","state","count","$options","countComputed","onClick","_cache","args","increment","incrementBy","_hoisted_2","_hoisted_3","lastMutation"],"sources":["/home/des-sis18/proyectosHTML/VueJsCourse/BasesVue/vueApp/06-bases-vuex/src/components/CounterComponent.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Counter - vuex</h1>\n        <h2>Direct access: {{ $store.state.count }}</h2>\n        <h2>Computed: {{ countComputed }}</h2>\n\n        <button @click=\"increment\">+1</button>\n        <button @click=\"incrementBy\">+5</button>\n        <button>Random</button>\n        <h1>mapState</h1>\n        <h2>mapState:{{ count }}</h2>\n        <h2>lastMutation:{{ lastMutation }}</h2>\n    </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex' //se usa para obtener todo lo que se quiera del state\n    export default {\n        name:'CounterComponent',\n\n        //computed: mapState(['count'])\n         computed:{\n             countComputed(){\n                return this.$store.state.count \n             },\n\n             ...mapState(['count','lastMutation'])\n            // ...mapState({\n            //     count: state => state.count\n            // })\n\n         },\n\n         methods: {\n            increment(){\n               this.$store.commit('increment') \n            },\n            incrementBy(){\n                this.$store.commit('incrementBy', 5)\n            }\n         },\n\n        \n    }\n</script>"],"mappings":";gCAEQA,mBAAA,CAAuB,YAAnB,gBAAc;gCAMlBA,mBAAA,CAAuB,gBAAf,QAAM;gCACdA,mBAAA,CAAiB,YAAb,UAAQ;;;uBARhBC,mBAAA,CAWM,cAVFC,UAAuB,EACvBF,mBAAA,CAAgD,YAA5C,iBAAe,GAAAG,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,KAAK,kBACxCP,mBAAA,CAAsC,YAAlC,YAAU,GAAAG,gBAAA,CAAGK,QAAA,CAAAC,aAAa,kBAE9BT,mBAAA,CAAsC;IAA7BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,SAAA,IAAAL,QAAA,CAAAK,SAAA,IAAAD,IAAA,CAAS;KAAE,IAAE,GAC7BZ,mBAAA,CAAwC;IAA/BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAM,WAAA,IAAAN,QAAA,CAAAM,WAAA,IAAAF,IAAA,CAAW;KAAE,IAAE,GAC/BG,UAAuB,EACvBC,UAAiB,EACjBhB,mBAAA,CAA6B,YAAzB,WAAS,GAAAG,gBAAA,CAAGC,IAAA,CAAAG,KAAK,kBACrBP,mBAAA,CAAwC,YAApC,eAAa,GAAAG,gBAAA,CAAGC,IAAA,CAAAa,YAAY,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}