{"ast":null,"code":"import getRandomInt from \"@/helpers/getRandomInt\";\nimport state from './state';\nconst counterStore = {\n  //TODO: falta algo\n  namespaced: true,\n  //vuelve al state reactivo mediante una funcion flecha\n  state,\n  //parecido a methods\n  mutations: {\n    increment(state) {\n      state.count++;\n      state.lastMutation = 'increment';\n    },\n    incrementBy(state, val) {\n      state.count += val;\n      state.lastMutation = 'incrementBy ' + val;\n    },\n    setLoading(state, val) {\n      state.isLoading = val;\n    }\n  },\n  actions: {\n    async incrementRandomInt({\n      commit\n    }) {\n      commit('setLoading', true);\n      const randomInt = await getRandomInt();\n      commit('incrementBy', randomInt);\n      commit('setLoading', false);\n    }\n  },\n  //parecidos a las computed properties\n  getters: {\n    squareCount(state) {\n      return state.count * state.count;\n    }\n  }\n};\nexport default counterStore;","map":{"version":3,"names":["getRandomInt","state","counterStore","namespaced","mutations","increment","count","lastMutation","incrementBy","val","setLoading","isLoading","actions","incrementRandomInt","commit","randomInt","getters","squareCount"],"sources":["/home/des-sis18/proyectosHTML/VueJsCourse/BasesVue/vueApp/06-bases-vuex/src/store/counter/index.js"],"sourcesContent":["import getRandomInt from \"@/helpers/getRandomInt\";\nimport state from './state'\nconst counterStore = {\n    //TODO: falta algo\n    namespaced:true,\n    //vuelve al state reactivo mediante una funcion flecha\n    state,\n\n    //parecido a methods\n    mutations:{\n        increment(state){\n            state.count++\n            state.lastMutation = 'increment'\n        },\n        incrementBy(state,val){\n            state.count+= val\n            state.lastMutation = 'incrementBy ' + val\n        },\n        setLoading(state,val){\n            state.isLoading = val\n        }\n\n    },\n    actions:{\n        async incrementRandomInt({commit}){\n            \n            commit('setLoading',true)\n            const randomInt = await getRandomInt()\n            commit('incrementBy', randomInt)\n            commit('setLoading',false)\n            \n        }\n    },\n\n    //parecidos a las computed properties\n    getters:{\n        squareCount(state){\n            return state.count*state.count\n        }\n    },\n}\n\nexport default counterStore"],"mappings":"AAAA,OAAOA,YAAY,MAAM,wBAAwB;AACjD,OAAOC,KAAK,MAAM,SAAS;AAC3B,MAAMC,YAAY,GAAG;EACjB;EACAC,UAAU,EAAC,IAAI;EACf;EACAF,KAAK;EAEL;EACAG,SAAS,EAAC;IACNC,SAASA,CAACJ,KAAK,EAAC;MACZA,KAAK,CAACK,KAAK,EAAE;MACbL,KAAK,CAACM,YAAY,GAAG,WAAW;IACpC,CAAC;IACDC,WAAWA,CAACP,KAAK,EAACQ,GAAG,EAAC;MAClBR,KAAK,CAACK,KAAK,IAAGG,GAAG;MACjBR,KAAK,CAACM,YAAY,GAAG,cAAc,GAAGE,GAAG;IAC7C,CAAC;IACDC,UAAUA,CAACT,KAAK,EAACQ,GAAG,EAAC;MACjBR,KAAK,CAACU,SAAS,GAAGF,GAAG;IACzB;EAEJ,CAAC;EACDG,OAAO,EAAC;IACJ,MAAMC,kBAAkBA,CAAC;MAACC;IAAM,CAAC,EAAC;MAE9BA,MAAM,CAAC,YAAY,EAAC,IAAI,CAAC;MACzB,MAAMC,SAAS,GAAG,MAAMf,YAAY,EAAE;MACtCc,MAAM,CAAC,aAAa,EAAEC,SAAS,CAAC;MAChCD,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC;IAE9B;EACJ,CAAC;EAED;EACAE,OAAO,EAAC;IACJC,WAAWA,CAAChB,KAAK,EAAC;MACd,OAAOA,KAAK,CAACK,KAAK,GAACL,KAAK,CAACK,KAAK;IAClC;EACJ;AACJ,CAAC;AAED,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}